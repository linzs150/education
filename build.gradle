import java.text.SimpleDateFormat

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.1'
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2' // greendao
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        //module模块调用主工程模块方法(AppJoint 插件依赖)
        classpath 'io.github.prototypez:app-joint:1.6.1'
    }
}

allprojects {
    repositories {
        jcenter()
        google()
        maven { url 'https://jitpack.io' }
	maven{url "https://maven.google.com"}
        maven{url'http://developer.huawei.com/repo/'}
    }
}

ext {
    compileSdkVersion = 27
    buildToolsVersion = '27.1.1'
    minSdkVersion = 19
    targetSdkVersion = 27
    appTargetSdkVersion = 27
    versionCode = 150
    versionName = '8.1.0'
    sdkSourceCompatibility = 1.8
    sdkTargetCompatibility = 1.8
    appSourceCompatibility = 1.8
    appTargetCompatibility = 1.8
    nimOutputDir = "nim-outputs-${versionName}-${getBuildTime()}-${getGitVersion()}"

    //参考other-sdks 下的版本， 严格按照绑定的NRTC 版本来 ，使用 fetch_nrtc.sh 更新NRTC时会自动修改
    nosSdkVersion = '1.0.1'
    reportSdkVersion = '2.0.1'
}

static def getBuildTime() {
    Date date = new Date()
    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyyMMdd")
    return simpleDateFormat.format(date)
}

static def getGitVersion() {
    try {
        return 'git rev-parse --short HEAD'.execute().text.trim()
    } catch (Throwable th) {
        th.printStackTrace()
        return ""
    }
}

ext {
    compileSdkVersion = 27
    buildToolsVersion = "27.1.1"
    minSdkVersion = 19
    targetSdkVersion = 27

    nertcSdk = "com.netease.yunxin:nertc:3.7.1"

    nimVersion = '8.1.5'
    imSdk = "com.netease.nimlib:basesdk:$nimVersion"
    avsignallingSdk = "com.netease.nimlib:avsignalling:$nimVersion"
    imPushSdk = "com.netease.nimlib:push:$nimVersion"
    luceneSdk = "com.netease.nimlib:lucene:$nimVersion"
    chatroomSdk = "com.netease.nimlib:chatroom:$nimVersion"
    rtsSdk = "com.netease.nimlib:rts:$nimVersion"
    superteamSdk = "com.netease.nimlib:superteam:$nimVersion"
//    ysfSdk = "com.netease.nimlib:ysf:$nimVersion"
//    ysfkitSdk = "com.netease.nimlib:ysfkit:$nimVersion"

    ndkAbis = [
            'armeabi-v7a',
            'x86',
            'arm64-v8a',
            'x86_64'
    ]
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
